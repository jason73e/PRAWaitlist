#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmailApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PRAWAITLIST")]
	public partial class EmailClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmailControlModel(EmailControlModel instance);
    partial void UpdateEmailControlModel(EmailControlModel instance);
    partial void DeleteEmailControlModel(EmailControlModel instance);
    partial void InsertEmailQueueModel(EmailQueueModel instance);
    partial void UpdateEmailQueueModel(EmailQueueModel instance);
    partial void DeleteEmailQueueModel(EmailQueueModel instance);
    #endregion
		
		public EmailClassesDataContext() : 
				base(global::EmailApplication.Properties.Settings.Default.PRAWAITLISTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EmailClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmailClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmailClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmailClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EmailControlModel> EmailControlModels
		{
			get
			{
				return this.GetTable<EmailControlModel>();
			}
		}
		
		public System.Data.Linq.Table<EmailQueueModel> EmailQueueModels
		{
			get
			{
				return this.GetTable<EmailQueueModel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailControlModel")]
	public partial class EmailControlModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FromAddress;
		
		private string _SMTPDeliveryMethod;
		
		private string _SMTPHost;
		
		private int _SMTPPort;
		
		private string _SMTPUser;
		
		private string _SMTPPassword;
		
		private bool _SMTPEnableSSL;
		
		private int _SMTPSendLimit;
		
		private bool _SMTPisActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFromAddressChanging(string value);
    partial void OnFromAddressChanged();
    partial void OnSMTPDeliveryMethodChanging(string value);
    partial void OnSMTPDeliveryMethodChanged();
    partial void OnSMTPHostChanging(string value);
    partial void OnSMTPHostChanged();
    partial void OnSMTPPortChanging(int value);
    partial void OnSMTPPortChanged();
    partial void OnSMTPUserChanging(string value);
    partial void OnSMTPUserChanged();
    partial void OnSMTPPasswordChanging(string value);
    partial void OnSMTPPasswordChanged();
    partial void OnSMTPEnableSSLChanging(bool value);
    partial void OnSMTPEnableSSLChanged();
    partial void OnSMTPSendLimitChanging(int value);
    partial void OnSMTPSendLimitChanged();
    partial void OnSMTPisActiveChanging(bool value);
    partial void OnSMTPisActiveChanged();
    #endregion
		
		public EmailControlModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAddress", DbType="NVarChar(MAX)")]
		public string FromAddress
		{
			get
			{
				return this._FromAddress;
			}
			set
			{
				if ((this._FromAddress != value))
				{
					this.OnFromAddressChanging(value);
					this.SendPropertyChanging();
					this._FromAddress = value;
					this.SendPropertyChanged("FromAddress");
					this.OnFromAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPDeliveryMethod", DbType="NVarChar(MAX)")]
		public string SMTPDeliveryMethod
		{
			get
			{
				return this._SMTPDeliveryMethod;
			}
			set
			{
				if ((this._SMTPDeliveryMethod != value))
				{
					this.OnSMTPDeliveryMethodChanging(value);
					this.SendPropertyChanging();
					this._SMTPDeliveryMethod = value;
					this.SendPropertyChanged("SMTPDeliveryMethod");
					this.OnSMTPDeliveryMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPHost", DbType="NVarChar(MAX)")]
		public string SMTPHost
		{
			get
			{
				return this._SMTPHost;
			}
			set
			{
				if ((this._SMTPHost != value))
				{
					this.OnSMTPHostChanging(value);
					this.SendPropertyChanging();
					this._SMTPHost = value;
					this.SendPropertyChanged("SMTPHost");
					this.OnSMTPHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPPort", DbType="Int NOT NULL")]
		public int SMTPPort
		{
			get
			{
				return this._SMTPPort;
			}
			set
			{
				if ((this._SMTPPort != value))
				{
					this.OnSMTPPortChanging(value);
					this.SendPropertyChanging();
					this._SMTPPort = value;
					this.SendPropertyChanged("SMTPPort");
					this.OnSMTPPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPUser", DbType="NVarChar(MAX)")]
		public string SMTPUser
		{
			get
			{
				return this._SMTPUser;
			}
			set
			{
				if ((this._SMTPUser != value))
				{
					this.OnSMTPUserChanging(value);
					this.SendPropertyChanging();
					this._SMTPUser = value;
					this.SendPropertyChanged("SMTPUser");
					this.OnSMTPUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPPassword", DbType="NVarChar(MAX)")]
		public string SMTPPassword
		{
			get
			{
				return this._SMTPPassword;
			}
			set
			{
				if ((this._SMTPPassword != value))
				{
					this.OnSMTPPasswordChanging(value);
					this.SendPropertyChanging();
					this._SMTPPassword = value;
					this.SendPropertyChanged("SMTPPassword");
					this.OnSMTPPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPEnableSSL", DbType="Bit NOT NULL")]
		public bool SMTPEnableSSL
		{
			get
			{
				return this._SMTPEnableSSL;
			}
			set
			{
				if ((this._SMTPEnableSSL != value))
				{
					this.OnSMTPEnableSSLChanging(value);
					this.SendPropertyChanging();
					this._SMTPEnableSSL = value;
					this.SendPropertyChanged("SMTPEnableSSL");
					this.OnSMTPEnableSSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPSendLimit", DbType="Int NOT NULL")]
		public int SMTPSendLimit
		{
			get
			{
				return this._SMTPSendLimit;
			}
			set
			{
				if ((this._SMTPSendLimit != value))
				{
					this.OnSMTPSendLimitChanging(value);
					this.SendPropertyChanging();
					this._SMTPSendLimit = value;
					this.SendPropertyChanged("SMTPSendLimit");
					this.OnSMTPSendLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPisActive", DbType="Bit NOT NULL")]
		public bool SMTPisActive
		{
			get
			{
				return this._SMTPisActive;
			}
			set
			{
				if ((this._SMTPisActive != value))
				{
					this.OnSMTPisActiveChanging(value);
					this.SendPropertyChanging();
					this._SMTPisActive = value;
					this.SendPropertyChanged("SMTPisActive");
					this.OnSMTPisActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailQueueModel")]
	public partial class EmailQueueModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _QueueDate;
		
		private string _StatusModel;
		
		private System.DateTime _StatusDate;
		
		private int _RecipientCount;
		
		private string _MessageTo;
		
		private string _MessageSubject;
		
		private string _MessageCC;
		
		private string _MessageBCC;
		
		private string _MessageBody;
		
		private bool _MessageIsHtml;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQueueDateChanging(System.DateTime value);
    partial void OnQueueDateChanged();
    partial void OnStatusModelChanging(string value);
    partial void OnStatusModelChanged();
    partial void OnStatusDateChanging(System.DateTime value);
    partial void OnStatusDateChanged();
    partial void OnRecipientCountChanging(int value);
    partial void OnRecipientCountChanged();
    partial void OnMessageToChanging(string value);
    partial void OnMessageToChanged();
    partial void OnMessageSubjectChanging(string value);
    partial void OnMessageSubjectChanged();
    partial void OnMessageCCChanging(string value);
    partial void OnMessageCCChanged();
    partial void OnMessageBCCChanging(string value);
    partial void OnMessageBCCChanged();
    partial void OnMessageBodyChanging(string value);
    partial void OnMessageBodyChanged();
    partial void OnMessageIsHtmlChanging(bool value);
    partial void OnMessageIsHtmlChanged();
    #endregion
		
		public EmailQueueModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueDate", DbType="DateTime NOT NULL")]
		public System.DateTime QueueDate
		{
			get
			{
				return this._QueueDate;
			}
			set
			{
				if ((this._QueueDate != value))
				{
					this.OnQueueDateChanging(value);
					this.SendPropertyChanging();
					this._QueueDate = value;
					this.SendPropertyChanged("QueueDate");
					this.OnQueueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusModel", DbType="NVarChar(MAX)")]
		public string StatusModel
		{
			get
			{
				return this._StatusModel;
			}
			set
			{
				if ((this._StatusModel != value))
				{
					this.OnStatusModelChanging(value);
					this.SendPropertyChanging();
					this._StatusModel = value;
					this.SendPropertyChanged("StatusModel");
					this.OnStatusModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusDate", DbType="DateTime NOT NULL")]
		public System.DateTime StatusDate
		{
			get
			{
				return this._StatusDate;
			}
			set
			{
				if ((this._StatusDate != value))
				{
					this.OnStatusDateChanging(value);
					this.SendPropertyChanging();
					this._StatusDate = value;
					this.SendPropertyChanged("StatusDate");
					this.OnStatusDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientCount", DbType="Int NOT NULL")]
		public int RecipientCount
		{
			get
			{
				return this._RecipientCount;
			}
			set
			{
				if ((this._RecipientCount != value))
				{
					this.OnRecipientCountChanging(value);
					this.SendPropertyChanging();
					this._RecipientCount = value;
					this.SendPropertyChanged("RecipientCount");
					this.OnRecipientCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageTo", DbType="NVarChar(MAX)")]
		public string MessageTo
		{
			get
			{
				return this._MessageTo;
			}
			set
			{
				if ((this._MessageTo != value))
				{
					this.OnMessageToChanging(value);
					this.SendPropertyChanging();
					this._MessageTo = value;
					this.SendPropertyChanged("MessageTo");
					this.OnMessageToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageSubject", DbType="NVarChar(MAX)")]
		public string MessageSubject
		{
			get
			{
				return this._MessageSubject;
			}
			set
			{
				if ((this._MessageSubject != value))
				{
					this.OnMessageSubjectChanging(value);
					this.SendPropertyChanging();
					this._MessageSubject = value;
					this.SendPropertyChanged("MessageSubject");
					this.OnMessageSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageCC", DbType="NVarChar(MAX)")]
		public string MessageCC
		{
			get
			{
				return this._MessageCC;
			}
			set
			{
				if ((this._MessageCC != value))
				{
					this.OnMessageCCChanging(value);
					this.SendPropertyChanging();
					this._MessageCC = value;
					this.SendPropertyChanged("MessageCC");
					this.OnMessageCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageBCC", DbType="NVarChar(MAX)")]
		public string MessageBCC
		{
			get
			{
				return this._MessageBCC;
			}
			set
			{
				if ((this._MessageBCC != value))
				{
					this.OnMessageBCCChanging(value);
					this.SendPropertyChanging();
					this._MessageBCC = value;
					this.SendPropertyChanged("MessageBCC");
					this.OnMessageBCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageBody", DbType="NVarChar(MAX)")]
		public string MessageBody
		{
			get
			{
				return this._MessageBody;
			}
			set
			{
				if ((this._MessageBody != value))
				{
					this.OnMessageBodyChanging(value);
					this.SendPropertyChanging();
					this._MessageBody = value;
					this.SendPropertyChanged("MessageBody");
					this.OnMessageBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageIsHtml", DbType="Bit NOT NULL")]
		public bool MessageIsHtml
		{
			get
			{
				return this._MessageIsHtml;
			}
			set
			{
				if ((this._MessageIsHtml != value))
				{
					this.OnMessageIsHtmlChanging(value);
					this.SendPropertyChanging();
					this._MessageIsHtml = value;
					this.SendPropertyChanged("MessageIsHtml");
					this.OnMessageIsHtmlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
