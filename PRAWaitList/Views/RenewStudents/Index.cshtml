@model PRAWaitList.Models.RenewStudentsViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Renew Students";
}

<h2>Renew Students</h2>

@using (Html.BeginForm("Index", "RenewStudents", FormMethod.Get))
{
    <table class="table">
        <tr>
            <td>
                <label class="form-control-static">Apply For Year:</label>
            </td>
            <td>
                @Html.DropDownListFor(model => model.SearchApplyYear, Model.ApplyYearList, "- Select an Apply Year -", htmlAttributes: new { @class = "form-control" })
            </td>
            <td>
                <label class="form-control-static">Status:</label>
            </td>
            <td>
                @Html.DropDownListFor(model => model.SearchStatus, Model.StatusList, "- Select a Status -", htmlAttributes: new { @class = "form-control" })
            </td>
            <td>
                <input type="submit" value="Search" class="btn btn-primary" />
            </td>
        </tr>
    </table>
    <label class="form-control-static">Page @(Model.lsStudents.PageCount < Model.lsStudents.PageNumber ? 0 : Model.lsStudents.PageNumber) of @Model.lsStudents.PageCount</label>
    <p>
        <label class="form-control-static">Records Per Page: </label>@Html.DropDownList("PageSize", new SelectList(new Dictionary<string, int> { { "10", 10 }, { "20", 20 }, { "50", 50 }, { "100", 100 } }, "Key", "Value", Model.lsStudents.PageSize), new { @class = "pro_pag_tf1", id = "pagesizelist", @onchange = "this.form.submit();" })
    </p>

}
@Html.PagedListPager(Model.lsStudents, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentApplyYear = ViewBag.CurrentApplyYear, currentStatus = ViewBag.CurrentStatus, PageSize = ViewBag.PageSize }))
<table class="table">
    <tr>
        <th nowrap="nowrap">
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParm, currentApplyYear = ViewBag.CurrentApplyYear, currentStatus = ViewBag.CurrentStatus, PageSize = ViewBag.PageSize })
        </th>
        <th nowrap="nowrap">
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParm, currentApplyYear = ViewBag.CurrentApplyYear, currentStatus = ViewBag.CurrentStatus, PageSize = ViewBag.PageSize })
        </th>
        <th nowrap="nowrap">
            @Html.ActionLink("Birth Date", "Index", new { sortOrder = ViewBag.BirthDateSortParm, currentApplyYear = ViewBag.CurrentApplyYear, currentStatus = ViewBag.CurrentStatus, PageSize = ViewBag.PageSize })
        </th>
        <th nowrap="nowrap">
            @Html.ActionLink("Gender", "Index", new { sortOrder = ViewBag.GenderSortParm, currentApplyYear = ViewBag.CurrentApplyYear, currentStatus = ViewBag.CurrentStatus, PageSize = ViewBag.PageSize })
        </th>
        <th nowrap="nowrap">
            @Html.ActionLink("Current Grade", "Index", new { sortOrder = ViewBag.CurrentGradeSortParm, currentApplyYear = ViewBag.CurrentApplyYear, currentStatus = ViewBag.CurrentStatus, PageSize = ViewBag.PageSize })
        </th>
        <th nowrap="nowrap">
            @Html.ActionLink("Applying For Grade", "Index", new { sortOrder = ViewBag.ApplyingForGradeSortParm, currentApplyYear = ViewBag.CurrentApplyYear, currentStatus = ViewBag.CurrentStatus, PageSize = ViewBag.PageSize })
        </th>
        <th nowrap="nowrap">
            @Html.ActionLink("Applying For Year", "Index", new { sortOrder = ViewBag.ApplyingForYearSortParm, currentApplyYear = ViewBag.CurrentApplyYear, currentStatus = ViewBag.CurrentStatus, PageSize = ViewBag.PageSize })
        </th>
        <th nowrap="nowrap">
            @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusSortParm, currentApplyYear = ViewBag.CurrentApplyYear, currentStatus = ViewBag.CurrentStatus, PageSize = ViewBag.PageSize })
        </th>
        <th nowrap="nowrap">
            @Html.ActionLink("Is PRA Sibling", "Index", new { sortOrder = ViewBag.IsPRASibling, currentApplyYear = ViewBag.CurrentApplyYear, currentStatus = ViewBag.CurrentStatus, PageSize = ViewBag.PageSize })
        </th>
    </tr>

    @foreach (var item in Model.lsStudents)
    {
        <tr>
            <td nowrap="nowrap">
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td nowrap="nowrap">
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td nowrap="nowrap">
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td nowrap="nowrap">
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td nowrap="nowrap">
                @Html.DisplayFor(modelItem => item.CurrentGrade)
            </td>
            <td nowrap="nowrap">
                @Html.DisplayFor(modelItem => item.ApplyGrade)
            </td>
            <td nowrap="nowrap">
                @Html.DisplayFor(modelItem => item.ApplyYear)
            </td>
            <td nowrap="nowrap">
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td nowrap="nowrap">
                @Html.DisplayFor(modelItem => item.isPRASibling)
            </td>
        </tr>
    }

</table>
<br />

<button onclick="RenewStudents()" type="button" class="btn btn-primary btn-success">Renew Students</button>
<script>
    //CALLING METHOD IN THE CONTROLLER TO DO SOME WORK
    function RenewStudents() {

        $.getJSON("/RenewStudents/RenewStudents",
        {},
        function (data) {
            if (!data) {
                alert("Complete.");
                window.location.href = "/RenewStudents/index";
            }
            else
            {
                alert(data);
            }
        });
    }

</script>
@section scripts {
    @Scripts.Render("~/Scripts/RenewStudents.js")
}
