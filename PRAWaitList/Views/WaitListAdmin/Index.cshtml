@model PRAWaitList.Models.WaitlistAdminViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Waitlist Students";
}

<h2>Waitlist Students</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "WaitListAdmin", FormMethod.Get))
{
    <table class="table">
        <tr>
            <td>
                <label class="form-control-static">Find by Name:</label>
            </td>
            <td>
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
            </td>
            <td>
                <label class="form-control-static">Apply Grade:</label>                 
            </td>
            <td>
                @Html.EnumDropDownListFor(model => model.SearchGrade, "- Select a Grade -", htmlAttributes: new { @class = "form-control" })
            </td>
            <td>
                <label class="form-control-static">Apply Year:</label>
            </td>
            <td>
                @Html.DropDownListFor(model => model.SearchYear,Model.SchoolYearList, "- Select a Year -", htmlAttributes: new { @class = "form-control" })
            </td>
            <td>
                <label class="form-control-static">Status:</label>                 
            </td>
            <td>
                @Html.DropDownListFor(model => model.SearchStatus, Model.StatusList, "- Select a Status -", htmlAttributes: new { @class = "form-control" })
            </td>
            <td>
                <input type="submit" value="Search" class="btn btn-primary btn-success" />
            </td>
        </tr>
    </table>
    <label class="form-control-static">Page @(Model.lsStudents.PageCount < Model.lsStudents.PageNumber ? 0 : Model.lsStudents.PageNumber) of @Model.lsStudents.PageCount</label>
    <p>
        <label class="form-control-static">Records Per Page: </label>@Html.DropDownList("PageSize", new SelectList(new Dictionary<string, int> { { "10", 10 }, { "20", 20 }, { "50", 50 }, { "100", 100 } }, "Key", "Value", Model.lsStudents.PageSize), new { @class = "pro_pag_tf1", id = "pagesizelist", @onchange = "this.form.submit();" })
    </p>

}
            @Html.PagedListPager(Model.lsStudents, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize=ViewBag.PageSize }))
            <table class="table">
                <tr>
                    <th nowrap="nowrap">
                        @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParm, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize = ViewBag.PageSize })
                    </th>
                    <th nowrap="nowrap">
                        @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParm, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize = ViewBag.PageSize })
                    </th>
                    <th nowrap="nowrap">
                        @Html.ActionLink("Birth Date", "Index", new { sortOrder = ViewBag.BirthDateSortParm, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize = ViewBag.PageSize })
                    </th>
                    <th nowrap="nowrap">
                        @Html.ActionLink("Gender", "Index", new { sortOrder = ViewBag.GenderSortParm, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize = ViewBag.PageSize })
                    </th>
                    <th nowrap="nowrap">
                        @Html.ActionLink("Current Grade", "Index", new { sortOrder = ViewBag.CurrentGradeSortParm, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize = ViewBag.PageSize })
                    </th>
                    <th nowrap="nowrap">
                        @Html.ActionLink("Applying For Grade", "Index", new { sortOrder = ViewBag.ApplyingForGradeSortParm, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize = ViewBag.PageSize })
                    </th>
                    <th nowrap="nowrap">
                        @Html.ActionLink("Applying For Year", "Index", new { sortOrder = ViewBag.ApplyingForYearSortParm, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize = ViewBag.PageSize })
                    </th>
                    <th nowrap="nowrap">
                        @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusSortParm, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize = ViewBag.PageSize })
                    </th>
                    <th nowrap="nowrap">
                        @Html.ActionLink("Is PRA Sibling", "Index", new { sortOrder = ViewBag.IsPRASibling, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize = ViewBag.PageSize })
                    </th>
                    <th nowrap="nowrap">
                        @Html.ActionLink("Is Parent Staff", "Index", new { sortOrder = ViewBag.IsParentStaff, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize = ViewBag.PageSize })
                    </th>
                    <th nowrap="nowrap">
                        @Html.ActionLink("Is Parent SAC", "Index", new { sortOrder = ViewBag.IsParentSAC, currentFilter = ViewBag.CurrentFilter, currentGrade = ViewBag.CurrentGrade, currentStatus = ViewBag.CurrentStatus, currentApplyYear = ViewBag.CurrentApplyYear, PageSize = ViewBag.PageSize })
                    </th>
                    <th nowrap="nowrap">
                    </th>
                </tr>

                @foreach (var item in Model.lsStudents)
                {
                    <tr>
                        <td nowrap="nowrap">
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td nowrap="nowrap">
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td nowrap="nowrap">
                            @Html.DisplayFor(modelItem => item.BirthDate)
                        </td>
                        <td nowrap="nowrap">
                            @Html.DisplayFor(modelItem => item.Gender)
                        </td>
                        <td nowrap="nowrap">
                            @Html.DisplayFor(modelItem => item.CurrentGrade)
                        </td>
                        <td nowrap="nowrap">
                            @Html.DisplayFor(modelItem => item.ApplyGrade)
                        </td>
                        <td nowrap="nowrap">
                            @Html.DisplayFor(modelItem => item.ApplyYear)
                        </td>
                        <td nowrap="nowrap">
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td nowrap="nowrap">
                            @Html.DisplayFor(modelItem => item.isPRASibling)
                        </td>
                        <td nowrap="nowrap">
                            @{bool isStaff = item.isParentStaff();
                            }
                                @Html.DisplayFor(modelItem => isStaff)
                        </td>
                        <td nowrap="nowrap">
                            @{bool isSAC = item.isParentSAC();
                            }
                            @Html.DisplayFor(modelItem => isSAC)
                        </td>
                        <td nowrap="nowrap">
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        </td>
                    </tr>
                }

            </table>
            <br />

            @section scripts {
                @Scripts.Render("~/Scripts/WaitListAdmin.js")
            }
