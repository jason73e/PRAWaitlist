@model PRAWaitList.Models.IntentToEnrollViewModel

<div class="form-horizontal  col-md-12">
    <h4>Siblings</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @for (int iSiblingCounter = 0; iSiblingCounter < Model.lsSiblings.Count; iSiblingCounter++)
    {
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-horizontal  col-md-6">
                    @Html.HiddenFor(model => Model.lsSiblings[iSiblingCounter].Id)
                    @Html.HiddenFor(model => Model.lsSiblings[iSiblingCounter].CreateDate)
                    @Html.HiddenFor(model => Model.lsSiblings[iSiblingCounter].UpdateDate)
                    @Html.HiddenFor(model => Model.lsSiblings[iSiblingCounter].UpdateUserID)
                    @Html.HiddenFor(model => Model.lsSiblings[iSiblingCounter].isActive)
                    @Html.HiddenFor(model => Model.lsSiblings[iSiblingCounter].FamilyID)


                    <div class="form-group">
                        @Html.LabelFor(model => Model.lsSiblings[iSiblingCounter].LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => Model.lsSiblings[iSiblingCounter].LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.lsSiblings[iSiblingCounter].LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.lsSiblings[iSiblingCounter].FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => Model.lsSiblings[iSiblingCounter].FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.lsSiblings[iSiblingCounter].FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-horizontal  col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(model => Model.lsSiblings[iSiblingCounter].BirthDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => Model.lsSiblings[iSiblingCounter].BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.lsSiblings[iSiblingCounter].BirthDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => Model.lsSiblings[iSiblingCounter].isPRAStudent, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="checkbox">
                                @Html.EditorFor(model => Model.lsSiblings[iSiblingCounter].isPRAStudent)
                                @Html.ValidationMessageFor(model => Model.lsSiblings[iSiblingCounter].isPRAStudent, "", new { @class = "text-danger" })
                            </div>
                            <input id="btnRemoveSibling" type="submit" name="RemoveSibling" formnovalidate="formnovalidate" value="Remove Sibling @(iSiblingCounter + 1)" class="btn btn-primary btn-success" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <input id="btnAddSibling" type="submit" name="AddSibling" value="Add Sibling" formnovalidate="formnovalidate" class="btn btn-primary btn-success" />
</div>
